<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>uk.co.diyaccounting.mdcms-lib</groupId>
	<artifactId>parent</artifactId>
	<version>0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>${project.artifactId}</name>
	<description>A parent defining versions of libraries and versions and configuration of plug-ins</description>

	<!--
	Maybe switch to: https://commons.apache.org/commons-parent-pom.html
	-->
	<!--parent>
		<groupId>com.antonycc.code-quality</groupId>
		<artifactId>parent</artifactId>
		<version>1.88</version>
		<relativePath />
	</parent-->

	<!-- Uncomment when updating plugin versions -->
	<!--
		[WARNING] The project uk.co.diyaccounting.mdcms-lib:parent:pom:1.101-SNAPSHOT uses prerequisites
		which is only intended for maven-plugin projects but not for non maven-plugin projects.
		For such purposes you should use the maven-enforcer-plugin.
		See https://maven.apache.org/enforcer/enforcer-rules/requireMavenVersion.html
	-->
	<!--prerequisites>
		<maven>3.6</maven>
	</prerequisites-->

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>11</java.version>
		<maven.version>3.6</maven.version>

		<!-- Dependency versions -->
		<!-- Download everything for offline -->
		<!--   mvn dependency:go-offline -DoverWriteSnapshots=true -DoverWriteReleases=true -->
		<!-- Download dependencies: dependency:resolve -->
		<!-- Download source: mvn dependency:sources -->
		<!-- Download docs: mvn dependency:resolve -Dclassifier=javadoc -->
		<!-- Check: mvn versions:display-dependency-updates -->
		<activemq-broker.version>5.16.3</activemq-broker.version>
		<aws-sdk.version>2.17.99</aws-sdk.version>
		<commons-codec.version>1.15</commons-codec.version>
		<commons-collections4.version>4.4</commons-collections4.version>
		<commons-dbcp2.version>2.9.0</commons-dbcp2.version>
		<commons-dbutils.version>1.7</commons-dbutils.version>
		<commons-io.version>2.7</commons-io.version>
		<commons-lang3.version>3.12.0</commons-lang3.version>
		<commons-text.version>1.9</commons-text.version>
		<easymock.version>4.3</easymock.version>
		<el-impl.version>2.2.1-b05</el-impl.version>
		<flyway-core.version>6.5.7</flyway-core.version> <!-- Latest: 8.2.1 -->
		<freemarker.version>2.3.31</freemarker.version>
		<geronimo-jms_1.1_spec.version>1.1.1</geronimo-jms_1.1_spec.version>
		<hamcrest-core.version>2.2</hamcrest-core.version>
		<hibernate-core.version>5.6.2.Final</hibernate-core.version><!-- Latest: 6.0.0.Beta2 -->
		<hibernate-entitymanager.version>5.6.2.Final</hibernate-entitymanager.version><!-- Latest: 6.0.0.Alpha7 -->
		<hibernate-validator.version>6.2.0.Final</hibernate-validator.version><!-- Latest: 7.0.1.Final -->
		<hsqldb.version>2.6.1</hsqldb.version>
		<httpclient.version>4.5.13</httpclient.version>
		<httpcore.version>4.4.15</httpcore.version>
		<ini4j.version>0.5.4</ini4j.version>
		<jackson-core.version>2.13.0</jackson-core.version>
		<jakarta.el-api.version>3.0.3</jakarta.el-api.version><!-- Latest: 4.0.0 -->
		<jakarta.jms-api.version>3.0.0</jakarta.jms-api.version>
		<jakarta.mail-api.version>1.6.7</jakarta.mail-api.version><!-- Latest: 2.1.0-RC1 -->
		<jakarta.mail.version>1.6.5</jakarta.mail.version><!-- Latest: 2.0.1 -->
		<jakarta.persistence-api.version>2.2.3</jakarta.persistence-api.version><!-- Latest: 3.0.0 -->
		<jakarta.transaction-api.version>2.0.0</jakarta.transaction-api.version>
		<jakarta.servlet-api.version>4.0.4</jakarta.servlet-api.version><!-- Latest: 5.0.0 -->
		<jakarta.servlet.jsp-api.version>3.0.0</jakarta.servlet.jsp-api.version>
		<jakarta.servlet.jsp.jstl-api>2.0.0</jakarta.servlet.jsp.jstl-api>
		<jakarta.validation-api.version>2.0.2</jakarta.validation-api.version>
		<jakarta.xml.bind-api.version>4.0.0-RC2</jakarta.xml.bind-api.version>
		<jakarta.inject-api.version>2.0.1.MR</jakarta.inject-api.version>
		<java-curl.version>1.2.2.2</java-curl.version>
		<javax.persistence-api.version>2.2</javax.persistence-api.version>
		<jaxb-runtime.version>3.0.2</jaxb-runtime.version>
		<jaxb-api.version>2.4.0-b180830.0359</jaxb-api.version>
		<jcommander.version>1.81</jcommander.version>
		<joda-time.version>2.10.13</joda-time.version>
		<junit.version>4.13.2</junit.version>
		<jjwt.version>0.11.2</jjwt.version>
		<logback-classic.version>1.2.7</logback-classic.version><!-- Latest: 1.3.0-alpha10 -->
		<mysql-connector-java.version>8.0.27</mysql-connector-java.version>
		<hibernate-jpa-n.m-api.version>1.0.2</hibernate-jpa-n.m-api.version>
		<reflections.version>0.9.12</reflections.version><!-- Latest: 0.10.2 -->
		<slf4j-api.version>1.7.32</slf4j-api.version><!-- Latest: 2.0.0-alpha5 -->
		<spring-boot.version>2.7.6</spring-boot.version><!-- Latest: 3.0.0 -->
		<spring-core.version>6.0.0</spring-core.version><!-- Latest: 5.3.13,5.2.7.RELEASE -->
		<spring-data-jpa.version>2.6.0</spring-data-jpa.version><!-- Consider linking to spring-boot, Latest: 2.6.0, 2.3.2.RELEASE -->
		<spring-cql.version>1.5.23.RELEASE</spring-cql.version>
		<spring-ldap-core.version>2.6.0</spring-ldap-core.version>
		<tomcat-embed-core.version>10.1.0-M8</tomcat-embed-core.version>

		<!-- Plugins -->
		<!-- Check: mvn versions:display-plugin-updates -->
		<build-helper-maven-plugin.version>3.1.0</build-helper-maven-plugin.version>
		<cargo-maven2-plugin.version>1.7.13</cargo-maven2-plugin.version>
		<copy-rename-maven-plugin.version>1.0.1</copy-rename-maven-plugin.version>
		<dockerfile-maven-plugin.version>1.4.12</dockerfile-maven-plugin.version>
		<docker-compose-maven-plugin.version>4.0.0</docker-compose-maven-plugin.version>
		<maven-antrun-plugin.version>3.0.0</maven-antrun-plugin.version>
		<maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-dependency-plugin.version>3.1.2</maven-dependency-plugin.version>
		<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
		<maven-enforcer-plugin.version>1.4.1</maven-enforcer-plugin.version> <!-- Latest: 3.0.0-M3 -->
		<maven-install-plugin.version>2.5.2</maven-install-plugin.version>
		<maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
		<maven-release-plugin.version>2.5.3</maven-release-plugin.version>
		<maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
		<maven-shade-plugin.version>3.2.3</maven-shade-plugin.version>
		<maven-site-plugin.version>3.9.0</maven-site-plugin.version>
		<maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version> <!-- Latest: 3.0.0-M4 -->
		<maven-war-plugin.version>3.2.3</maven-war-plugin.version>
		<truezip-maven-plugin.version>1.2</truezip-maven-plugin.version>
		<xml-maven-plugin.version>1.0.2</xml-maven-plugin.version>

		<!-- Check: mvn versions:display-property-updates -->
	</properties>

	<scm>
		<connection>scm:git:git@github.com:antonycc/mdcms-lib.git/parent</connection>
		<developerConnection>scm:git:git@github.com:antonycc/mdcms-lib.git/parent</developerConnection>
	  <tag>HEAD</tag>
  </scm>

	<distributionManagement>
	</distributionManagement>

	<repositories>
	</repositories>

	<pluginRepositories>
    </pluginRepositories>

    <!-- dependency version configuration -->
    <dependencyManagement>
        <dependencies>
            <!-- Local project runtime dependencies -->
            <dependency>
                <groupId>uk.co.diyaccounting.mdcms-lib</groupId>
                <artifactId>cms-lib</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>uk.co.diyaccounting.mdcms-lib</groupId>
                <artifactId>test-lib</artifactId>
                <version>${project.version}</version>
            </dependency>
	        <dependency>
		        <groupId>uk.co.diyaccounting.mdcms-lib</groupId>
		        <artifactId>persistence-lib</artifactId>
		        <version>${project.version}</version>
	        </dependency>
            <dependency>
                <groupId>uk.co.diyaccounting.mdcms-lib</groupId>
                <artifactId>utils-lib</artifactId>
                <version>${project.version}</version>
            </dependency>

	        <!-- Active MQ for messaging, at least in test -->
	        <dependency>
		        <groupId>org.apache.activemq</groupId>
		        <artifactId>activemq-broker</artifactId>
		        <version>${activemq-broker.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>org.apache.activemq</groupId>
		        <artifactId>activemq-spring</artifactId>
		        <version>${activemq-broker.version}</version>
		        <exclusions>
			        <exclusion>
				        <groupId>commons-logging</groupId>
				        <artifactId>commons-logging</artifactId>
			        </exclusion>
		        </exclusions>
	        </dependency>
	        <dependency>
		        <groupId>org.apache.activemq</groupId>
		        <artifactId>activemq-jdbc-store</artifactId>
		        <version>${activemq-broker.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>org.apache.activemq</groupId>
		        <artifactId>activemq-kahadb-store</artifactId>
		        <version>${activemq-broker.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>org.apache.activemq</groupId>
		        <artifactId>activemq-client</artifactId>
		        <version>${activemq-broker.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>org.apache.geronimo.specs</groupId>
		        <artifactId>geronimo-jms_1.1_spec</artifactId>
		        <version>${geronimo-jms_1.1_spec.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>com.fasterxml.jackson.core</groupId>
		        <artifactId>jackson-databind</artifactId>
		        <version>${jackson-core.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>com.fasterxml.jackson.core</groupId>
		        <artifactId>jackson-annotations</artifactId>
		        <version>${jackson-core.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>com.fasterxml.jackson.core</groupId>
		        <artifactId>jackson-core</artifactId>
		        <version>${jackson-core.version}</version>
	        </dependency>

	        <!-- Amazon libraries -->
	        <dependency>
		        <groupId>software.amazon.awssdk</groupId>
		        <artifactId>sdk-core</artifactId>
		        <version>${aws-sdk.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>software.amazon.awssdk</groupId>
		        <artifactId>regions</artifactId>
		        <version>${aws-sdk.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>software.amazon.awssdk</groupId>
		        <artifactId>sesv2</artifactId>
		        <version>${aws-sdk.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>software.amazon.awssdk</groupId>
		        <artifactId>auth</artifactId>
		        <version>${aws-sdk.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>software.amazon.awssdk</groupId>
		        <artifactId>s3</artifactId>
		        <version>${aws-sdk.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>software.amazon.awssdk</groupId>
		        <artifactId>http-client-spi</artifactId>
		        <version>${aws-sdk.version}</version>
	        </dependency>

            <!-- Apache commons libraries used throughout -->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
	            <exclusions>
		            <exclusion>
			            <groupId>commons-logging</groupId>
			            <artifactId>commons-logging</artifactId>
		            </exclusion>
	            </exclusions>
            </dependency>
	        <dependency>
		        <groupId>org.apache.httpcomponents</groupId>
		        <artifactId>httpcore</artifactId>
		        <version>${httpcore.version}</version>
		        <exclusions>
			        <exclusion>
				        <groupId>commons-logging</groupId>
				        <artifactId>commons-logging</artifactId>
			        </exclusion>
		        </exclusions>
	        </dependency>
	        <dependency>
		        <groupId>org.apache.commons</groupId>
		        <artifactId>commons-text</artifactId>
		        <version>${commons-text.version}</version>
	        </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons-collections4.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>
	        <dependency>
		        <groupId>org.apache.commons</groupId>
		        <artifactId>commons-dbcp2</artifactId>
		        <version>${commons-dbcp2.version}</version>
		        <exclusions>
			        <exclusion>
							<groupId>commons-logging</groupId>
							<artifactId>commons-logging</artifactId>
					  </exclusion>
		        </exclusions>
	        </dependency>
	         <dependency>
		         <groupId>commons-dbutils</groupId>
		         <artifactId>commons-dbutils</artifactId>
		         <version>${commons-dbutils.version}</version>
	         </dependency>
            <dependency>
                <groupId>com.beust</groupId>
                <artifactId>jcommander</artifactId>
                <version>${jcommander.version}</version>
            </dependency>

	         <!-- Docker building -->
				<dependency>
					<groupId>com.spotify</groupId>
					<artifactId>dockerfile-maven-plugin</artifactId>
					<version>${dockerfile-maven-plugin.version}</version>
				</dependency>
	        <dependency>
		        <groupId>com.dkanejs.maven.plugins</groupId>
		        <artifactId>docker-compose-maven-plugin</artifactId>
		        <version>${docker-compose-maven-plugin.version}</version>
	        </dependency>

            <!-- Spring - Main webapp uses Spring MVC -->
	        <dependency>
		        <groupId>org.springframework.boot</groupId>
		        <artifactId>spring-boot</artifactId>
		        <version>${spring-boot.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>org.springframework.boot</groupId>
		        <artifactId>spring-boot-loader</artifactId>
		        <version>${spring-boot.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>org.springframework.boot</groupId>
		        <artifactId>spring-boot-starter-web</artifactId>
		        <version>${spring-boot.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>org.springframework.boot</groupId>
		        <artifactId>spring-boot-autoconfigure</artifactId>
		        <version>${spring-boot.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>org.apache.tomcat.embed</groupId>
		        <artifactId>tomcat-embed-core</artifactId>
		        <version>${tomcat-embed-core.version}</version>
	        </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${spring-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring-core.version}</version>
                <exclusions>
                    <!-- Exclude Commons Logging in favour of SLF4j -->
                    <!--exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion-->
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${spring-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${spring-core.version}</version>
            </dependency>
	        <dependency>
		        <groupId>org.springframework</groupId>
		        <artifactId>spring-jms</artifactId>
		        <version>${spring-core.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>org.springframework</groupId>
		        <artifactId>spring-jdbc</artifactId>
		        <version>${spring-core.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>org.springframework</groupId>
		        <artifactId>spring-orm</artifactId>
		        <version>${spring-core.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>org.springframework</groupId>
		        <artifactId>spring-tx</artifactId>
		        <version>${spring-core.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>org.springframework</groupId>
		        <artifactId>spring-expression</artifactId>
		        <version>${spring-core.version}</version>
	        </dependency>
           <dependency>
	           <groupId>org.springframework.ldap</groupId>
	           <artifactId>spring-ldap-core</artifactId>
	           <version>${spring-ldap-core.version}</version>
           </dependency>
           <dependency>
	           <groupId>org.springframework.ldap</groupId>
	           <artifactId>spring-ldap-core-tiger</artifactId>
	           <version>${spring-ldap-core.version}</version>
           </dependency>

            <!-- Hibernate - The product catalogue uses hibernate + JPA2 + Spring Data -->
            <dependency>
               <groupId>org.hibernate</groupId>
               <artifactId>hibernate-entitymanager</artifactId>
               <version>${hibernate-entitymanager.version}</version>
	            <exclusions>
	            <exclusion>
		            <groupId>org.jboss.logging</groupId>
		            <artifactId>XXXX-jboss-logging</artifactId>
	            </exclusion>
	            </exclusions>
            </dependency>
            <dependency>
               <groupId>org.hibernate.javax.persistence</groupId>
               <artifactId>hibernate-jpa-2.1-api</artifactId>
               <version>${hibernate-jpa-n.m-api.version}</version>
               <!--exclusions>
                  <exclusion>
                     <artifactId>xml-apis</artifactId>
                     <groupId>xml-apis</groupId>
                  </exclusion>
               </exclusions-->
            </dependency>
	        <dependency>
		        <groupId>org.hibernate</groupId>
		        <artifactId>hibernate-c3p0</artifactId>
		        <version>${hibernate-core.version}</version>
		        <exclusions>
			        <exclusion>
				        <groupId>org.jboss.logging</groupId>
				        <artifactId>XXXX-jboss-logging</artifactId>
			        </exclusion>
		        </exclusions>
	        </dependency>
	        <dependency>
		        <groupId>org.hibernate</groupId>
		        <artifactId>hibernate-core</artifactId>
		        <version>${hibernate-core.version}</version>
		        <exclusions>
			        <exclusion>
				        <groupId>org.jboss.logging</groupId>
				        <artifactId>XXXX-jboss-logging</artifactId>
			        </exclusion>
		        </exclusions>
	        </dependency>
	        <dependency>
		        <groupId>javax.xml.bind</groupId>
		        <artifactId>jaxb-api</artifactId>
		        <version>${jaxb-api.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>jakarta.transaction</groupId>
		        <artifactId>jakarta.transaction-api</artifactId>
		        <version>${jakarta.transaction-api.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>jakarta.xml.bind</groupId>
		        <artifactId>jakarta.xml.bind-api</artifactId>
		        <version>${jakarta.xml.bind-api.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>jakarta.validation</groupId>
		        <artifactId>jakarta.validation-api</artifactId>
		        <version>${jakarta.validation-api.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>jakarta.el</groupId>
		        <artifactId>jakarta.el-api</artifactId>
		        <version>${jakarta.el-api.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>jakarta.persistence</groupId>
		        <artifactId>jakarta.persistence-api</artifactId>
		        <version>${jakarta.persistence-api.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>javax.persistence</groupId>
		        <artifactId>javax.persistence-api</artifactId>
		        <version>${javax.persistence-api.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>org.springframework.data</groupId>
		        <artifactId>spring-data-jpa</artifactId>
		        <version>${spring-data-jpa.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>org.springframework.data</groupId>
		        <artifactId>spring-cql</artifactId>
		        <version>${spring-cql.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>org.springframework</groupId>
		        <artifactId>spring-aspects</artifactId>
		        <version>${spring-core.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>org.glassfish.jaxb</groupId>
		        <artifactId>jaxb-runtime</artifactId>
		        <version>${jaxb-runtime.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>org.glassfish.web</groupId>
		        <artifactId>el-impl</artifactId>
		        <version>${el-impl.version}</version>
	        </dependency>

	        <!-- HSQL - The product catalogue and CRM db is stored in HSQL when running in memory -->
            <dependency>
                <groupId>org.hsqldb</groupId>
                <artifactId>hsqldb</artifactId>
                <version>${hsqldb.version}</version>
            </dependency>

	         <!-- MYSQL - The product catalogue and CRM db is stored in MySQL when running in production -->
	         <dependency>
		         <groupId>mysql</groupId>
		         <artifactId>mysql-connector-java</artifactId>
		         <version>${mysql-connector-java.version}</version>
	         </dependency>

	        <!-- Flyway controls database migrations when not using Hibernate's create mode -->
	        <dependency>
		        <groupId>org.flywaydb</groupId>
		        <artifactId>flyway-core</artifactId>
		        <version>${flyway-core.version}</version>
	        </dependency>

	        <!-- Freemarker templating -->
	        <dependency>
		        <groupId>org.freemarker</groupId>
		        <artifactId>freemarker</artifactId>
		        <version>${freemarker.version}</version>
	        </dependency>

	        <!-- JWT -->
	        <dependency>
		        <groupId>io.jsonwebtoken</groupId>
		        <artifactId>jjwt-api</artifactId>
		        <version>${jjwt.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>io.jsonwebtoken</groupId>
		        <artifactId>jjwt-impl</artifactId>
		        <version>${jjwt.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>io.jsonwebtoken</groupId>
		        <artifactId>jjwt-jackson</artifactId> <!-- or jjwt-gson if Gson is preferred -->
		        <version>${jjwt.version}</version>
	        </dependency>

            <!-- @Inject -->
	         <dependency>
		        <groupId>jakarta.inject</groupId>
		        <artifactId>jakarta.inject-api</artifactId>
		        <version>${jakarta.inject-api.version}</version>
	         </dependency>

	        <!-- JMS -->
	        <dependency>
		        <groupId>jakarta.jms</groupId>
		        <artifactId>jakarta.jms-api</artifactId>
		        <version>${jakarta.jms-api.version}</version>
	        </dependency>

            <!-- Servlet API -->
            <dependency>
                <groupId>jakarta.servlet</groupId>
                <artifactId>jakarta.servlet-api</artifactId>
                <version>${jakarta.servlet-api.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.servlet.jsp</groupId>
                <artifactId>jakarta.servlet.jsp-api</artifactId>
                <version>${jakarta.servlet.jsp-api.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.servlet.jsp.jstl</groupId>
                <artifactId>jakarta.servlet.jsp.jstl-api</artifactId>
                <version>${jakarta.servlet.jsp.jstl-api.version}</version>
            </dependency>

            <!-- Java Mail -->
	        <dependency>
		        <groupId>jakarta.mail</groupId>
		        <artifactId>jakarta.mail-api</artifactId>
		        <version>${jakarta.mail-api.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>com.sun.mail</groupId>
		        <artifactId>jakarta.mail</artifactId>
		        <version>${jakarta.mail.version}</version>
	        </dependency>

            <!-- Logging uses SLF4J with Logback implementation -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j-api.version}</version>
            </dependency>
	        <dependency>
		        <groupId>org.slf4j</groupId>
		        <artifactId>jul-to-slf4j</artifactId>
		        <version>${slf4j-api.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>org.slf4j</groupId>
		        <artifactId>log4j-over-slf4j</artifactId>
		        <version>${slf4j-api.version}</version>
	        </dependency>
	        <dependency>
		        <groupId>ch.qos.logback</groupId>
		        <artifactId>logback-classic</artifactId>
		        <version>${logback-classic.version}</version>
	        </dependency>

            <!-- Moving to JODA time for time intervals -->
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time.version}</version>
            </dependency>

            <!-- Catalogue is defined using a section properties file which in an ini file -->
            <dependency>
                <groupId>org.ini4j</groupId>
                <artifactId>ini4j</artifactId>
                <version>${ini4j.version}</version>
            </dependency>

            <!-- Bean validation using annotations -->
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
	            <exclusions>
		            <exclusion>
			            <groupId>org.jboss.logging</groupId>
			            <artifactId>XXXX-jboss-logging</artifactId>
		            </exclusion>
	            </exclusions>
            </dependency>
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator-annotation-processor</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>

            <!-- Test framework is JUnit with EasyMock -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-core</artifactId>
                <version>${hamcrest-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.easymock</groupId>
                <artifactId>easymock</artifactId>
                <version>${easymock.version}</version>
                <!--exclusions>
                    <exclusion>
                        <groupId>cglib</groupId>
                        <artifactId>cglib-nodep</artifactId>
                    </exclusion>
                </exclusions-->
            </dependency>
	         <dependency>
		         <groupId>com.github.rockswang</groupId>
		         <artifactId>java-curl</artifactId>
		         <version>${java-curl.version}</version>
		         <scope>test</scope>
	         </dependency>

	        <!-- Import dependency management from Spring Boot -->
	        <dependency>
		        <groupId>org.springframework.boot</groupId>
		        <artifactId>spring-boot-dependencies</artifactId>
		        <version>${spring-boot.version}</version>
		        <type>pom</type>
		        <scope>import</scope>
	        </dependency>

	        <!-- Used to query the classpath resources -->
	        <dependency>
		        <groupId>org.reflections</groupId>
		        <artifactId>reflections</artifactId>
		        <version>${reflections.version}</version>
	        </dependency>

        </dependencies>
    </dependencyManagement>

    <!-- Plugin configuration -->
    <build>
	    <extensions>
	    </extensions>
        <pluginManagement>
            <plugins>
	            <!-- Copy individual files -->
	            <plugin>
	               <groupId>com.coderplus.maven.plugins</groupId>
	               <artifactId>copy-rename-maven-plugin</artifactId>
	               <version>${copy-rename-maven-plugin.version}</version>
	            </plugin>

	            <!-- Zip expander for content -->
	            <plugin>
		            <groupId>org.codehaus.mojo</groupId>
		            <artifactId>truezip-maven-plugin</artifactId>
		            <version>${truezip-maven-plugin.version}</version>
	            </plugin>

                <!-- Ant runner used for announcing maven phases -->
                <plugin>
                   <groupId>org.apache.maven.plugins</groupId>
                   <artifactId>maven-antrun-plugin</artifactId>
                   <version>${maven-antrun-plugin.version}</version>
                </plugin>

                <!-- Dependency management -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                    <executions>
	                    <execution>
		                    <id>analyze</id>
		                    <goals>
			                    <goal>analyze-only</goal>
		                    </goals>
		                    <configuration>
			                    <ignoredUnusedDeclaredDependencies>
				                    <ignoredUnusedDeclaredDependency>*</ignoredUnusedDeclaredDependency>
			                    </ignoredUnusedDeclaredDependencies>
			                    <failOnWarning>true</failOnWarning>
			                    <ignoreNonCompile>false</ignoreNonCompile>
		                    </configuration>
	                    </execution>
	                    <execution>
		                    <id>analyze-dep-mgt</id>
		                    <goals>
			                    <goal>analyze-dep-mgt</goal>
		                    </goals>
	                    </execution>
	                    <execution>
		                    <id>tree</id>
		                    <goals>
			                    <goal>tree</goal>
		                    </goals>
		                    <configuration>
			                    <scope>compile</scope>
		                    </configuration>
	                    </execution>
	                    <execution>
                            <id>resolve</id>
                            <goals>
                                <goal>resolve</goal>
                            </goals>
                            <configuration>
                                <includeClassifiers>sources,javadoc</includeClassifiers>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- Java compiler version and options -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <fork>true</fork>
                        <compilerVersion>${java.version}</compilerVersion>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <showDeprecation>true</showDeprecation>
                        <showWarnings>true</showWarnings>
                        <compilerArgument>-Xlint:unchecked,fallthrough,finally</compilerArgument>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>

	            <!-- Maven Enforcer Plugin -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<version>${maven-enforcer-plugin.version}</version>
						<executions>
							<execution>
								<id>enforce-maven</id>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<rules>
										<requirePluginVersions>
											<message>Define plugin versions.</message>
											<banLatest>true</banLatest>
											<banRelease>true</banRelease>
											<banSnapshots>true</banSnapshots>
											<phases>clean,deploy,site</phases>
										</requirePluginVersions>
										<requireMavenVersion>
											<version>${maven.version}</version>
										</requireMavenVersion>
										<requireJavaVersion>
											<version>${java.version}</version>
										</requireJavaVersion>
									</rules>
								</configuration>
							</execution>
						</executions>
					</plugin>

	             <!-- Java release version and options -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${maven-release-plugin.version}</version>
                </plugin>

                <!-- XML File validation -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>xml-maven-plugin</artifactId>
                    <version>${xml-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>validate</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!--  independent goals to assist with the Maven build lifecycle -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>maven-version</id>
                            <goals>
                                <goal>maven-version</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

					<!-- Misc Maven build plugins -->
					<plugin>
					   <groupId>org.apache.maven.plugins</groupId>
					   <artifactId>maven-clean-plugin</artifactId>
					   <version>${maven-clean-plugin.version}</version>
					</plugin>
					<plugin>
					   <groupId>org.apache.maven.plugins</groupId>
					   <artifactId>maven-deploy-plugin</artifactId>
					   <version>${maven-deploy-plugin.version}</version>
					</plugin>
					<plugin>
					   <groupId>org.apache.maven.plugins</groupId>
					   <artifactId>maven-install-plugin</artifactId>
					   <version>${maven-install-plugin.version}</version>
					</plugin>
					<plugin>
					   <groupId>org.apache.maven.plugins</groupId>
					   <artifactId>maven-site-plugin</artifactId>
					   <version>${maven-site-plugin.version}</version>
					</plugin>

                <!-- WAR builder -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven-war-plugin.version}</version>
                    <configuration>
                        <archive>
                            <addMavenDescriptor>true</addMavenDescriptor>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                            <manifestEntries>
                                <Maven-Version>${project.version}</Maven-Version>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>

                <!-- JAR builder -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                    <configuration>
                        <archive>
                            <addMavenDescriptor>true</addMavenDescriptor>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                            <manifestEntries>
                                <Maven-Version>${project.version}</Maven-Version>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>

                <!-- Surefire for unit tests -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <includes>
                            <include>**/unit/*.java</include>
                        </includes>
                        <excludes>
                            <exclude>**/integration/*.java</exclude>
                        </excludes>
	                    <argLine>
		                    --add-opens java.base/java.lang=ALL-UNNAMED
		                    --add-opens java.base/java.io=ALL-UNNAMED
	                    </argLine>
                    </configuration>
                </plugin>

                <!-- Failsafe for integration tests -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <includes>
                            <include>**/integration/*.java</include>
                        </includes>
                        <excludes>
                            <exclude>**/unit/*.java</exclude>
                        </excludes>
	                    <argLine>
		                    --add-opens java.base/java.lang=ALL-UNNAMED
		                    --add-opens java.base/java.io=ALL-UNNAMED
	                    </argLine>
                    </configuration>
                    <executions>
                        <execution>
                            <id>integration-tests</id>
                            <phase>integration-test</phase>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

	            <!-- Tomcat embedded and deployed runner -->
					<plugin>
					   <!-- https://codehaus-cargo.github.io/cargo/Home.html -->
					   <groupId>org.codehaus.cargo</groupId>
					   <artifactId>cargo-maven2-plugin</artifactId>
					   <version>${cargo-maven2-plugin.version}</version>
					   <configuration>
						   <configuration>
							   <properties>
								   <!--cargo.start.jvmargs>\-\-add-opens java.base/java.io=ALL-UNNAMED</cargo.start.jvmargs-->
								   <!--cargo.jvmargs>\-\-add-opens java.base/java.lang=ALL-UNNAMED \-\-add-opens java.base/java.io=ALL-UNNAMED</cargo.jvmargs-->
							   </properties>
						   </configuration>
					   </configuration>
					</plugin>

                <!-- Unified JAR Builders -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${maven-shade-plugin.version}</version>
                </plugin>

                <!-- Resource copier -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>

	            <!-- Docker -->
	            <plugin>
		            <groupId>com.spotify</groupId>
		            <artifactId>dockerfile-maven-plugin</artifactId>
		            <version>${dockerfile-maven-plugin.version}</version>
	            </plugin>
	            <plugin>
		            <groupId>com.dkanejs.maven.plugins</groupId>
		            <artifactId>docker-compose-maven-plugin</artifactId>
		            <version>${docker-compose-maven-plugin.version}</version>
	            </plugin>

	            <!-- Spring boot -->
	            <plugin>
		            <groupId>org.springframework.boot</groupId>
		            <artifactId>spring-boot-maven-plugin</artifactId>
		            <version>${spring-boot.version}</version>
		            <!--executions>
			            <execution>
				            <goals>
					            <goal>repackage</goal>
				            </goals>
			            </execution>
		            </executions-->
	            </plugin>

            </plugins>
        </pluginManagement>

        <defaultGoal>install</defaultGoal>

        <plugins>
            <!-- Surefire for unit tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>

            <!-- Run failsafe for integration tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>

            <!-- Static analysis -->
	         <plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-dependency-plugin</artifactId>
	         </plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
				</plugin>
            <!--plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
            </plugin-->
            <!-- plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
	             <configuration>
		            <skip>true</skip>
	             </configuration>
            </plugin -->

            <!-- Build utilities -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

	 <reporting>
		 <plugins>
			 <plugin>
				 <groupId>org.apache.maven.plugins</groupId>
				 <artifactId>maven-dependency-plugin</artifactId>
				 <version>${maven-dependency-plugin.version}</version>
				 <reportSets>
					 <reportSet>
						 <reports>
							 <report>analyze-report</report>
						 </reports>
					 </reportSet>
				 </reportSets>
			 </plugin>
		 </plugins>
	 </reporting>

    <profiles>
    </profiles>

</project>
